{
  "version": 3,
  "sources": ["../source/versionList.json", "../source/util.js", "../source/versionUpdates/29.0.0.js", "../source/versionUpdates/28.0.0.js", "../source/versionUpdates/26.0.0.js", "../source/versionUpdates/25.0.0.js", "../source/versionUpdates/24.0.0.js", "../source/versionUpdates/23.0.0.js", "../source/versionUpdates/22.0.0.js", "../source/updateFns.js", "../source/index.js", "../source/index_browser.js"],
  "sourcesContent": ["[\"29.0.0\",\"28.0.0\",\"26.0.0\",\"25.0.0\",\"24.0.0\",\"23.0.0\",\"22.0.0\"]", "// Utility functions used by other modules in this package.\n\n'use strict';\n\nconst VERSION_REGEX = /^lformsVersion: (.+)$/;\n\nmodule.exports = {\n  /**\n   *  Returns true if the given parsed JSON is a FHIR resource.\n   */\n  isFHIRResource: function (parsedJSON) {\n    return !!parsedJSON.resourceType;\n  },\n\n\n  /**\n   *  Finds extension arrays in the given structure, and calls the callback\n   *  for each array found, passing it as a parameter.\n   */\n  findExtensions: function (parsedJSON, callback) {\n    if (parsedJSON.extension)\n      callback(parsedJSON.extension);\n    let items = parsedJSON.item || parsedJSON.items; // \"items\" is the LForms format\n    if (items) {\n      for (let i of items)\n        this.findExtensions(i, callback);\n    }\n  },\n\n\n  /**\n   *  Finds the item by searching extension arrays in the given structure, and calls the callback\n   *  for each array found, passing the item as a parameter.\n   */\n  findItemByExtension: function (parsedJSON, callback) {\n    if (parsedJSON.extension)\n      callback(parsedJSON);\n    let items = parsedJSON.item || parsedJSON.items; // \"items\" is the LForms format\n    if (items) {\n      for (let i of items)\n        this.findItemByExtension(i, callback);\n    }\n  },\n\n\n  /**\n   *  Returns true if the first version is less than the second version.\n   *  Assumption: There are always three numeric parts in the version strings,\n   *  separated by periods.\n   * @param left the first version (left of the < operator).  This can be\n   *  undefined or null; in that case the return value is true.\n   * @param right the second version (right of the < operator)\n   */\n  versionLessThan: function (left, right) {\n    let rtn;\n    if (!left)\n      rtn = true; // unversioned case\n    else {\n      let leftParts = left.split('.');\n      let rightParts = right.split('.');\n      for (let i=0; i<3 && rtn === undefined; ++i) {\n        let lp = parseInt(leftParts[i]), rp = parseInt(rightParts[i]);\n        if (lp != rp)\n          rtn = lp < rp\n      }\n      if (rtn === undefined)\n        rtn = false;\n    }\n    return rtn;\n  },\n\n\n  /**\n   *  Returns a FHIR tag display string for a given LForms version string.\n   * @param lformsVersion The LForms SemVer string for which a tag is needed.\n   */\n  makeVersionTag: function (lformsVersion) {\n    return 'lformsVersion: '+lformsVersion;\n  },\n\n\n  /**\n   *  Returns the LForms SemVer version from the given FHIR tag object,\n   *  or null if the given tag string does not indicate an LForms version.\n   * @param tag A FHIR tag object\n   */\n  versionFromTag: function(tag) {\n    let rtn = null;\n    // Currently the version is on the \"code\" attribute, but originally it was\n    // on the \"display\" attribute, so we check both.\n    let versionStr = tag.code || tag.display;\n    let md = versionStr.match(VERSION_REGEX);\n    if (md)\n      rtn = md[1];\n    return rtn;\n  },\n\n\n  /**\n   *  Returns true if there is a LForms tag in the FHIR resource\n   * @param parsedJSON the updated resource\n   */\n  hasLformsTag(parsedJSON) {\n    if (parsedJSON.meta && parsedJSON.meta.tag) {\n      for (const tag of parsedJSON.meta.tag) {\n        if (tag.code && tag.code.match(VERSION_REGEX)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the calculatedExpresion URI changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === 'http://hl7.org/fhir/StructureDefinition/questionnaire-launchContext') {\n          ext.url = 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-launchContext';\n        }\n      }\n    });\n  }\n  return parsedJSON;\n};\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // If an observationLinkPeriod extension is used we add observationExtract\n  // This affects LForms and versioned Questionnaires\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) ||\n      (parsedJSON.resourceType === 'Questionnaire' && util.hasLformsTag(parsedJSON))) {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (const ext of extArray) {\n        // If the observationLinkPeriod is used then add the observationExtract extension too\n        if (ext.url === 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationLinkPeriod') {\n          extArray.push({\n            url: 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationExtract',\n            valueBoolean: true\n          });\n          break;\n        }\n      }\n    });\n  }\n  \n  return parsedJSON;\n};\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version new defaults were provided for templateOptions to hide the header\n  // and the form controls. This only affects LForms.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON)) {\n    if (typeof parsedJSON.templateOptions === 'object') {\n      // If template options were specified we won't override them\n\n      if (parsedJSON.templateOptions.hideFormControls === undefined) {\n        parsedJSON.templateOptions.hideFormControls = false;\n      }\n\n      if (parsedJSON.templateOptions.showFormHeader === undefined) {\n        parsedJSON.templateOptions.showFormHeader = true;\n      }\n\n    } else {\n      // If template options were not specified then add the previous defaults\n      parsedJSON.templateOptions = {\n        hideFormControls: false,\n        showFormHeader: true\n      }\n    }\n  }\n\n  return parsedJSON;\n};\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the calculatedExpresion URI changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-calculatedExpression\")\n          ext.url = \"http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-calculatedExpression\";\n      }\n    });\n  }\n  return parsedJSON;\n};\n", "'use strict';\n\nconst PATH_DELIMITER = \"/\";\n\n/**\n * Generate linkId from questionCode and replace questionCode in form controls\n * with linkId.\n * @param lfData a LForms form definition data object\n */\nfunction convertCodeToLinkId(lfData) {\n  _addLinkId(lfData.items, '', lfData);\n  _convertFormControls(lfData.items);\n  _removeTempFields(lfData.items)\n}\n\n/**\n * Remove the temporary fields created during the conversion\n * @param items a list of LForms items\n * @private\n */\nfunction _removeTempFields(items) {\n  // for each item on this level\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\n    var item = items[i];\n    delete item._parentItem;\n    delete item._codePath;\n    // process the sub items\n    if (item.items && item.items.length > 0) {\n      _removeTempFields(item.items);\n    }\n  }\n}\n\n/**\n * Generate linkId from questionCode\n * @param items a list of LForms items\n * @param parentItemCodePath the codePath of the parent item\n * @param parentItem the parent item\n * @private\n */\nfunction _addLinkId(items, parentItemCodePath, parentItem) {\n\n  var iLen = items.length, prevSibling = null, itemId = 1;\n\n  // for each item on this level\n  for (var i = 0; i < iLen; i++) {\n    var item = items[i];\n\n    var questionRepeatable = item.questionCardinality && item.questionCardinality.max &&\n        (item.questionCardinality.max === \"*\" || parseInt(item.questionCardinality.max) > 1);\n\n    // id\n    if (questionRepeatable && prevSibling && prevSibling.questionCode === item.questionCode) {\n      itemId += 1;\n    } else {\n      itemId = 1;\n    }\n\n    // codePath as linkId\n    var codePath = parentItemCodePath + PATH_DELIMITER + item.questionCode;\n\n    item._parentItem = parentItem;\n    item._codePath = codePath;\n\n    // linkId for Questionnaire\n    if (!item.linkId) {\n      item.linkId = codePath;\n    }\n    // keep a reference to the previous item for checking repeating items.\n    prevSibling = item;\n\n    // process the sub items\n    if (item.items && item.items.length > 0) {\n      _addLinkId(item.items, codePath, item);\n    }\n  }\n}\n\n\n/**\n * Convert questionCode in all form controls (skip logic, data control, calculation method)\n * to linkId\n * @param items a list of LForms items\n * @private\n */\nfunction _convertFormControls(items) {\n\n  for(var i=0, iLen=items.length; i<iLen; i++) {\n    var item = items[i];\n    // convert code in skip logic to be linkId\n    if (item.skipLogic && item.skipLogic.conditions) {\n      for (var j = 0, jLen = item.skipLogic.conditions.length; j < jLen; j++) {\n        var condition = item.skipLogic.conditions[j];\n        var sourceItem = _findItemsUpwardsAlongAncestorTree(item, condition.source); // source is still a code\n        condition.source = sourceItem.linkId;\n      } // end of conditions loop\n    }\n\n    // convert code in dataControl to be linkId\n    if (item.dataControl) {\n      for (var j= 0, jLen=item.dataControl.length; j<jLen; j++) {\n        var source = item.dataControl[j].source;\n\n        // has a source configuration\n        if (source && (!source.sourceType || source.sourceType === \"INTERNAL\") &&\n            source.sourceItemCode) {\n          // get the source item object\n          var sourceItem = _findItemsUpwardsAlongAncestorTree(item, source.sourceItemCode);\n          if (!sourceItem) {\n            // This is an error in the form definition.  Provide a useful\n            // debugging message.\n            throw new Error(\"Data control for item '\"+item.question+ \"' refers to source item '\"+source.sourceItemCode+\n                \"' which was not found as a sibling, ancestor, or ancestor sibling.\");\n          }\n          source.sourceLinkId = sourceItem.linkId;\n          delete source.sourceItemCode;\n        }\n      }\n    }\n\n    // convert code in calculationMethod to be linkId\n    if (item.calculationMethod && item.calculationMethod.value && Array.isArray(item.calculationMethod.value)) {\n      var newValue = [];\n      for (var j= 0, jLen=item.calculationMethod.value.length; j<jLen; j++) {\n        var questionCode = item.calculationMethod.value[j];\n        var sourceItem = _findItemsUpwardsAlongAncestorTree(item, questionCode);\n        newValue.push(sourceItem.linkId);\n      }\n\n      item.calculationMethod.value = newValue;\n    }\n\n    if (item.items && item.items.length > 0) {\n      _convertFormControls(item.items);\n    }\n  }\n\n}\n\n\n/**\n * Search upwards along the tree structure to find the item with a matching questionCode\n * @param item the item to start with\n * @param questionCode the code of an item\n * @returns {}\n * @private\n */\nfunction _findItemsUpwardsAlongAncestorTree(item, questionCode) {\n  var sourceItem = null;\n\n  // check siblings\n  if (item._parentItem && Array.isArray(item._parentItem.items)) {\n    for (var i= 0, iLen= item._parentItem.items.length; i<iLen; i++) {\n      if (item._parentItem.items[i].questionCode === questionCode) {\n        sourceItem = item._parentItem.items[i];\n        break;\n      }\n    }\n  }\n  // check ancestors and each ancestors siblings\n  if (!sourceItem) {\n    var parentItem = item._parentItem;\n    while (parentItem) {\n      var foundSource = false;\n      // check the ancestor\n      if (parentItem.questionCode === questionCode) {\n        sourceItem = parentItem;\n        foundSource = true;\n      }\n      // check the ancestors siblings\n      else if (parentItem._parentItem && Array.isArray(parentItem._parentItem.items)){\n        var parentSiblings = parentItem._parentItem.items;\n        for (var i= 0, iLen= parentSiblings.length; i<iLen; i++) {\n          if (parentSiblings[i].questionCode === questionCode) {\n            sourceItem = parentSiblings[i];\n            foundSource = true;\n            break;\n          }\n        }\n      }\n      if (foundSource)\n        break;\n\n      parentItem = parentItem._parentItem;\n    }\n  }\n  return sourceItem;\n}\n\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @param parsedJSON either an LForms definition or a resource generated by\n *  LForms.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n\n  let util = require('../util');\n  // if it is LForms form data object\n  if (!util.isFHIRResource(parsedJSON) && parsedJSON.items) {\n    convertCodeToLinkId(parsedJSON);\n  }\n  return parsedJSON;\n};\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @param parsedJSON either an LForms definition or a resource generated by\n *  LForms.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the lformsVersion tag changed to have its value on the\n  // \"code\" field rather than the \"display\" field (because the HAPI FHIR server\n  // requires a \"code\" for tags).\n  let util = require('../util');\n  let meta = parsedJSON.meta;\n  if (meta) {\n    let tags = meta.tag;\n    if (tags) {\n      for (let t of tags) {\n        let version = util.versionFromTag(t);\n        if (version) {\n          // Move the version string from \"display\" to \"code\".  The index.js\n          // code will handle updating the version number.\n          if (t.display && !t.code) {\n            t.code = t.display;\n            delete t.display;\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  // In this version the extension in Questionnaire for answer repeats is removed, and replaced with repeats = true.\n  if (parsedJSON.resourceType === 'Questionnaire') {\n    util.findItemByExtension(parsedJSON, function (item) {\n      if (item.extension) {\n        for (let i=0; i< item.extension.length; i++) {\n          let ext = item.extension[i];\n          if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-answerRepeats\") {\n            item.repeats = true;\n            item.extension.splice(i, 1);\n            i = i - 1;\n          }\n        }\n      }\n    });\n  }\n\n  return parsedJSON;\n};\n", "'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the observationLinkPeriod extension changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-observationLinkPeriod\")\n          ext.url = \"http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationLinkPeriod\";\n      }\n    });\n  }\n  return parsedJSON;\n};\n", "module.exports = {};\nmodule.exports['29.0.0'] = require('./versionUpdates/29.0.0.js');\nmodule.exports['28.0.0'] = require('./versionUpdates/28.0.0.js');\nmodule.exports['26.0.0'] = require('./versionUpdates/26.0.0.js');\nmodule.exports['25.0.0'] = require('./versionUpdates/25.0.0.js');\nmodule.exports['24.0.0'] = require('./versionUpdates/24.0.0.js');\nmodule.exports['23.0.0'] = require('./versionUpdates/23.0.0.js');\nmodule.exports['22.0.0'] = require('./versionUpdates/22.0.0.js');\n", "// Updates an LForms form definition or a FHIR resource generated by LForms,\n// to be compatible with the latest LForms version.\n\n'use strict';\n\n/**\n *  A list of all version numbers for which an update step is provided, in order\n *  from highest to lowest version number.\n */\nconst updateVersions_ = require('./versionList');\n\n/**\n *  A hash from an updateVersions_ entry to a function for performing that\n *  update step.  Each function takes the JSON for the resource to be updated.\n */\nconst updateFns_ = require('./updateFns');\n\n/**\n *  Updates an LForms form definition or a FHIR resource generated by LForms,\n *  to be compatible with the latest LForms version.\n * @param parsedJSON the parsed JSON containing the form\n *  definition or FHIR resource to be updated.\n * @param version (optional) the version to update to.  Updates for version\n *  numbers greater than this number will not be run.\n * @return the updated form definition or FHIR resource.\n */\nmodule.exports = {update: function (parsedJSON, version) {\n  let stopVersion = version;\n  let util = require('./util');\n  // Determine the lforms version\n  var isFHIR = util.isFHIRResource(parsedJSON);\n  var lformsVersion;\n  if (isFHIR) {\n    let meta = parsedJSON.meta;\n    if (meta) {\n      let tags = meta.tag;\n      if (tags) {\n        for (let t of tags) {\n          let tagVersion = util.versionFromTag(t);\n          if (tagVersion) {\n            lformsVersion = tagVersion;\n            break;\n          }\n        }\n      }\n    }\n  }\n  else { // an lforms form definition\n    lformsVersion = parsedJSON.lformsVersion;\n  }\n\n  // Determine which update steps need to run.\n  let updateSteps = [];\n  for (let i=0, len=updateVersions_.length, uv; i<len && (uv=updateVersions_[i]) &&\n       util.versionLessThan(lformsVersion, uv); ++i) {\n    if (!stopVersion || !util.versionLessThan(stopVersion, uv)) // stopVersion >= uv\n      updateSteps.push(uv);\n  }\n\n  let latestVersion = updateSteps[0];\n  for (let step of updateSteps.reverse()) // reverse changes the array in place\n    parsedJSON = updateFns_[step](parsedJSON);\n\n  // If we ran any of the updates, update the version tag\n  if (updateSteps.length) {\n    if (isFHIR) {\n      // Update or set the tag\n      let meta = parsedJSON.meta;\n      if (!meta)\n        meta = parsedJSON.meta = {};\n      let tags = meta.tag;\n      if (!tags)\n        tags = meta.tag = [];\n      let versionTag;\n      // for existing tags\n      for (let t of tags) {\n        let version = util.versionFromTag(t);\n        if (version) {\n          versionTag = t;\n          break;\n        }\n      }\n      let versionDisplay = util.makeVersionTag(latestVersion);\n      if (versionTag) {\n        versionTag.code = versionDisplay;\n        delete versionTag.display; // in case it was from the old version tag format\n      }\n      else\n        tags.push({code: versionDisplay});\n    }\n    else\n      parsedJSON.lformsVersion = latestVersion;\n  }\n\n  return parsedJSON;\n}};\n", "// To be used for browser-builds.  Defines lformsUpdater on window.\n\n'use strict';\n\nconst updater = require('./index');\nwindow.lformsUpdater = updater;\n"],
  "mappings": "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",
  "names": ["require__", "require__", "require__", "require__", "require__", "require__", "version"]
}
