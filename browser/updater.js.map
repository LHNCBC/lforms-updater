{"version":3,"sources":["webpack://lformsUpdater/webpack/bootstrap","webpack://lformsUpdater/./source/util.js","webpack://lformsUpdater/./source/index.js","webpack://lformsUpdater/./source/updateFns.js","webpack://lformsUpdater/./source/versionUpdates/29.0.0.js","webpack://lformsUpdater/./source/versionUpdates/28.0.0.js","webpack://lformsUpdater/./source/versionUpdates/26.0.0.js","webpack://lformsUpdater/./source/versionUpdates/25.0.0.js","webpack://lformsUpdater/./source/versionUpdates/24.0.0.js","webpack://lformsUpdater/./source/versionUpdates/23.0.0.js","webpack://lformsUpdater/./source/versionUpdates/22.0.0.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VERSION_REGEX","isFHIRResource","parsedJSON","resourceType","findExtensions","callback","extension","items","item","this","findItemByExtension","versionLessThan","left","right","rtn","leftParts","split","rightParts","undefined","lp","parseInt","rp","makeVersionTag","lformsVersion","versionFromTag","tag","md","code","display","match","hasLformsTag","meta","updateVersions_","require","updateFns_","update","version","stopVersion","util","isFHIR","tags","tagVersion","uv","updateSteps","len","length","push","latestVersion","reverse","step","versionTag","versionDisplay","extArray","ext","url","valueBoolean","templateOptions","hideFormControls","showFormHeader","convertCodeToLinkId","lfData","_addLinkId","parentItemCodePath","parentItem","iLen","prevSibling","questionCardinality","max","questionCode","codePath","_parentItem","_codePath","linkId","_convertFormControls","skipLogic","conditions","j","jLen","condition","sourceItem","_findItemsUpwardsAlongAncestorTree","source","dataControl","sourceType","sourceItemCode","Error","question","sourceLinkId","calculationMethod","Array","isArray","newValue","_removeTempFields","foundSource","parentSiblings","repeats","splice"],"mappings":"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","file":"browser/updater.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// Utility functions used by other modules in this package.\n\n'use strict';\n\nconst VERSION_REGEX = /^lformsVersion: (.+)$/;\n\nmodule.exports = {\n  /**\n   *  Returns true if the given parsed JSON is a FHIR resource.\n   */\n  isFHIRResource: function (parsedJSON) {\n    return !!parsedJSON.resourceType;\n  },\n\n\n  /**\n   *  Finds extension arrays in the given structure, and calls the callback\n   *  for each array found, passing it as a parameter.\n   */\n  findExtensions: function (parsedJSON, callback) {\n    if (parsedJSON.extension)\n      callback(parsedJSON.extension);\n    let items = parsedJSON.item || parsedJSON.items; // \"items\" is the LForms format\n    if (items) {\n      for (let i of items)\n        this.findExtensions(i, callback);\n    }\n  },\n\n\n  /**\n   *  Finds the item by searching extension arrays in the given structure, and calls the callback\n   *  for each array found, passing the item as a parameter.\n   */\n  findItemByExtension: function (parsedJSON, callback) {\n    if (parsedJSON.extension)\n      callback(parsedJSON);\n    let items = parsedJSON.item || parsedJSON.items; // \"items\" is the LForms format\n    if (items) {\n      for (let i of items)\n        this.findItemByExtension(i, callback);\n    }\n  },\n\n\n  /**\n   *  Returns true if the first version is less than the second version.\n   *  Assumption: There are always three numeric parts in the version strings,\n   *  separated by periods.\n   * @param left the first version (left of the < operator).  This can be\n   *  undefined or null; in that case the return value is true.\n   * @param right the second version (right of the < operator)\n   */\n  versionLessThan: function (left, right) {\n    let rtn;\n    if (!left)\n      rtn = true; // unversioned case\n    else {\n      let leftParts = left.split('.');\n      let rightParts = right.split('.');\n      for (let i=0; i<3 && rtn === undefined; ++i) {\n        let lp = parseInt(leftParts[i]), rp = parseInt(rightParts[i]);\n        if (lp != rp)\n          rtn = lp < rp\n      }\n      if (rtn === undefined)\n        rtn = false;\n    }\n    return rtn;\n  },\n\n\n  /**\n   *  Returns a FHIR tag display string for a given LForms version string.\n   * @param lformsVersion The LForms SemVer string for which a tag is needed.\n   */\n  makeVersionTag: function (lformsVersion) {\n    return 'lformsVersion: '+lformsVersion;\n  },\n\n\n  /**\n   *  Returns the LForms SemVer version from the given FHIR tag object,\n   *  or null if the given tag string does not indicate an LForms version.\n   * @param tag A FHIR tag object\n   */\n  versionFromTag: function(tag) {\n    let rtn = null;\n    // Currently the version is on the \"code\" attribute, but originally it was\n    // on the \"display\" attribute, so we check both.\n    let versionStr = tag.code || tag.display;\n    let md = versionStr.match(VERSION_REGEX);\n    if (md)\n      rtn = md[1];\n    return rtn;\n  },\n\n\n  /**\n   *  Returns true if there is a LForms tag in the FHIR resource\n   * @param parsedJSON the updated resource\n   */\n  hasLformsTag(parsedJSON) {\n    if (parsedJSON.meta && parsedJSON.meta.tag) {\n      for (const tag of parsedJSON.meta.tag) {\n        if (tag.code && tag.code.match(VERSION_REGEX)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n","// Updates an LForms form definition or a FHIR resource generated by LForms,\n// to be compatible with the latest LForms version.\n\n'use strict';\n\n/**\n *  A list of all version numbers for which an update step is provided, in order\n *  from highest to lowest version number.\n */\nconst updateVersions_ = require('./versionList');\n\nconst updateFns_ = require('./updateFns');\n\n/**\n *  Updates an LForms form definition or a FHIR resource generated by LForms,\n *  to be compatible with the latest LForms version.\n * @param parsedJSON the parsed JSON containing the form\n *  definition or FHIR resource to be updated.\n * @param version (optional) the version to update to.  Updates for version\n *  numbers greater than this number will not be run.\n * @return the updated form definition or FHIR resource.\n */\nmodule.exports = {update: function (parsedJSON, version) {\n  let stopVersion = version;\n  let util = require('./util');\n  // Determine the lforms version\n  var isFHIR = util.isFHIRResource(parsedJSON);\n  var lformsVersion;\n  if (isFHIR) {\n    let meta = parsedJSON.meta;\n    if (meta) {\n      let tags = meta.tag;\n      if (tags) {\n        for (let t of tags) {\n          let tagVersion = util.versionFromTag(t);\n          if (tagVersion) {\n            lformsVersion = tagVersion;\n            break;\n          }\n        }\n      }\n    }\n  }\n  else { // an lforms form definition\n    lformsVersion = parsedJSON.lformsVersion;\n  }\n\n  // Determine which update steps need to run.\n  let updateSteps = [];\n  for (let i=0, len=updateVersions_.length, uv; i<len && (uv=updateVersions_[i]) &&\n       util.versionLessThan(lformsVersion, uv); ++i) {\n    if (!stopVersion || !util.versionLessThan(stopVersion, uv)) // stopVersion >= uv\n      updateSteps.push(uv);\n  }\n\n  let latestVersion = updateSteps[0];\n  for (let step of updateSteps.reverse()) // reverse changes the array in place\n    parsedJSON = updateFns_[step](parsedJSON);\n\n  // If we ran any of the updates, update the version tag\n  if (updateSteps.length) {\n    if (isFHIR) {\n      // Update or set the tag\n      let meta = parsedJSON.meta;\n      if (!meta)\n        meta = parsedJSON.meta = {};\n      let tags = meta.tag;\n      if (!tags)\n        tags = meta.tag = [];\n      let versionTag;\n      // for existing tags\n      for (let t of tags) {\n        let version = util.versionFromTag(t);\n        if (version) {\n          versionTag = t;\n          break;\n        }\n      }\n      let versionDisplay = util.makeVersionTag(latestVersion);\n      if (versionTag) {\n        versionTag.code = versionDisplay;\n        delete versionTag.display; // in case it was from the old version tag format\n      }\n      else\n        tags.push({code: versionDisplay});\n    }\n    else\n      parsedJSON.lformsVersion = latestVersion;\n  }\n\n  return parsedJSON;\n}};\n","module.exports = {};\nmodule.exports['29.0.0'] = require('./versionUpdates/29.0.0.js');\nmodule.exports['28.0.0'] = require('./versionUpdates/28.0.0.js');\nmodule.exports['26.0.0'] = require('./versionUpdates/26.0.0.js');\nmodule.exports['25.0.0'] = require('./versionUpdates/25.0.0.js');\nmodule.exports['24.0.0'] = require('./versionUpdates/24.0.0.js');\nmodule.exports['23.0.0'] = require('./versionUpdates/23.0.0.js');\nmodule.exports['22.0.0'] = require('./versionUpdates/22.0.0.js');\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the calculatedExpresion URI changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === 'http://hl7.org/fhir/StructureDefinition/questionnaire-launchContext') {\n          ext.url = 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-launchContext';\n        }\n      }\n    });\n  }\n  return parsedJSON;\n};\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // If an observationLinkPeriod extension is used we add observationExtract\n  // This affects LForms and versioned Questionnaires\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) ||\n      (parsedJSON.resourceType === 'Questionnaire' && util.hasLformsTag(parsedJSON))) {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (const ext of extArray) {\n        // If the observationLinkPeriod is used then add the observationExtract extension too\n        if (ext.url === 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationLinkPeriod') {\n          extArray.push({\n            url: 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationExtract',\n            valueBoolean: true\n          });\n          break;\n        }\n      }\n    });\n  }\n  \n  return parsedJSON;\n};\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version new defaults were provided for templateOptions to hide the header\n  // and the form controls. This only affects LForms.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON)) {\n    if (typeof parsedJSON.templateOptions === 'object') {\n      // If template options were specified we won't override them\n\n      if (parsedJSON.templateOptions.hideFormControls === undefined) {\n        parsedJSON.templateOptions.hideFormControls = false;\n      }\n\n      if (parsedJSON.templateOptions.showFormHeader === undefined) {\n        parsedJSON.templateOptions.showFormHeader = true;\n      }\n\n    } else {\n      // If template options were not specified then add the previous defaults\n      parsedJSON.templateOptions = {\n        hideFormControls: false,\n        showFormHeader: true\n      }\n    }\n  }\n\n  return parsedJSON;\n};\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the calculatedExpresion URI changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-calculatedExpression\")\n          ext.url = \"http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-calculatedExpression\";\n      }\n    });\n  }\n  return parsedJSON;\n};\n","'use strict';\n\nconst PATH_DELIMITER = \"/\";\n\n/**\n * Generate linkId from questionCode and replace questionCode in form controls\n * with linkId.\n * @param lfData a LForms form definition data object\n */\nfunction convertCodeToLinkId(lfData) {\n  _addLinkId(lfData.items, '', lfData);\n  _convertFormControls(lfData.items);\n  _removeTempFields(lfData.items)\n}\n\n/**\n * Remove the temporary fields created during the conversion\n * @param items a list of LForms items\n * @private\n */\nfunction _removeTempFields(items) {\n  // for each item on this level\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\n    var item = items[i];\n    delete item._parentItem;\n    delete item._codePath;\n    // process the sub items\n    if (item.items && item.items.length > 0) {\n      _removeTempFields(item.items);\n    }\n  }\n}\n\n/**\n * Generate linkId from questionCode\n * @param items a list of LForms items\n * @param parentItemCodePath the codePath of the parent item\n * @param parentItem the parent item\n * @private\n */\nfunction _addLinkId(items, parentItemCodePath, parentItem) {\n\n  var iLen = items.length, prevSibling = null, itemId = 1;\n\n  // for each item on this level\n  for (var i = 0; i < iLen; i++) {\n    var item = items[i];\n\n    var questionRepeatable = item.questionCardinality && item.questionCardinality.max &&\n        (item.questionCardinality.max === \"*\" || parseInt(item.questionCardinality.max) > 1);\n\n    // id\n    if (questionRepeatable && prevSibling && prevSibling.questionCode === item.questionCode) {\n      itemId += 1;\n    } else {\n      itemId = 1;\n    }\n\n    // codePath as linkId\n    var codePath = parentItemCodePath + PATH_DELIMITER + item.questionCode;\n\n    item._parentItem = parentItem;\n    item._codePath = codePath;\n\n    // linkId for Questionnaire\n    if (!item.linkId) {\n      item.linkId = codePath;\n    }\n    // keep a reference to the previous item for checking repeating items.\n    prevSibling = item;\n\n    // process the sub items\n    if (item.items && item.items.length > 0) {\n      _addLinkId(item.items, codePath, item);\n    }\n  }\n}\n\n\n/**\n * Convert questionCode in all form controls (skip logic, data control, calculation method)\n * to linkId\n * @param items a list of LForms items\n * @private\n */\nfunction _convertFormControls(items) {\n\n  for(var i=0, iLen=items.length; i<iLen; i++) {\n    var item = items[i];\n    // convert code in skip logic to be linkId\n    if (item.skipLogic && item.skipLogic.conditions) {\n      for (var j = 0, jLen = item.skipLogic.conditions.length; j < jLen; j++) {\n        var condition = item.skipLogic.conditions[j];\n        var sourceItem = _findItemsUpwardsAlongAncestorTree(item, condition.source); // source is still a code\n        condition.source = sourceItem.linkId;\n      } // end of conditions loop\n    }\n\n    // convert code in dataControl to be linkId\n    if (item.dataControl) {\n      for (var j= 0, jLen=item.dataControl.length; j<jLen; j++) {\n        var source = item.dataControl[j].source;\n\n        // has a source configuration\n        if (source && (!source.sourceType || source.sourceType === \"INTERNAL\") &&\n            source.sourceItemCode) {\n          // get the source item object\n          var sourceItem = _findItemsUpwardsAlongAncestorTree(item, source.sourceItemCode);\n          if (!sourceItem) {\n            // This is an error in the form definition.  Provide a useful\n            // debugging message.\n            throw new Error(\"Data control for item '\"+item.question+ \"' refers to source item '\"+source.sourceItemCode+\n                \"' which was not found as a sibling, ancestor, or ancestor sibling.\");\n          }\n          source.sourceLinkId = sourceItem.linkId;\n          delete source.sourceItemCode;\n        }\n      }\n    }\n\n    // convert code in calculationMethod to be linkId\n    if (item.calculationMethod && item.calculationMethod.value && Array.isArray(item.calculationMethod.value)) {\n      var newValue = [];\n      for (var j= 0, jLen=item.calculationMethod.value.length; j<jLen; j++) {\n        var questionCode = item.calculationMethod.value[j];\n        var sourceItem = _findItemsUpwardsAlongAncestorTree(item, questionCode);\n        newValue.push(sourceItem.linkId);\n      }\n\n      item.calculationMethod.value = newValue;\n    }\n\n    if (item.items && item.items.length > 0) {\n      _convertFormControls(item.items);\n    }\n  }\n\n}\n\n\n/**\n * Search upwards along the tree structure to find the item with a matching questionCode\n * @param item the item to start with\n * @param questionCode the code of an item\n * @returns {}\n * @private\n */\nfunction _findItemsUpwardsAlongAncestorTree(item, questionCode) {\n  var sourceItem = null;\n\n  // check siblings\n  if (item._parentItem && Array.isArray(item._parentItem.items)) {\n    for (var i= 0, iLen= item._parentItem.items.length; i<iLen; i++) {\n      if (item._parentItem.items[i].questionCode === questionCode) {\n        sourceItem = item._parentItem.items[i];\n        break;\n      }\n    }\n  }\n  // check ancestors and each ancestors siblings\n  if (!sourceItem) {\n    var parentItem = item._parentItem;\n    while (parentItem) {\n      var foundSource = false;\n      // check the ancestor\n      if (parentItem.questionCode === questionCode) {\n        sourceItem = parentItem;\n        foundSource = true;\n      }\n      // check the ancestors siblings\n      else if (parentItem._parentItem && Array.isArray(parentItem._parentItem.items)){\n        var parentSiblings = parentItem._parentItem.items;\n        for (var i= 0, iLen= parentSiblings.length; i<iLen; i++) {\n          if (parentSiblings[i].questionCode === questionCode) {\n            sourceItem = parentSiblings[i];\n            foundSource = true;\n            break;\n          }\n        }\n      }\n      if (foundSource)\n        break;\n\n      parentItem = parentItem._parentItem;\n    }\n  }\n  return sourceItem;\n}\n\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @param parsedJSON either an LForms definition or a resource generated by\n *  LForms.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n\n  let util = require('../util');\n  // if it is LForms form data object\n  if (!util.isFHIRResource(parsedJSON) && parsedJSON.items) {\n    convertCodeToLinkId(parsedJSON);\n  }\n  return parsedJSON;\n};\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @param parsedJSON either an LForms definition or a resource generated by\n *  LForms.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the lformsVersion tag changed to have its value on the\n  // \"code\" field rather than the \"display\" field (because the HAPI FHIR server\n  // requires a \"code\" for tags).\n  let util = require('../util');\n  let meta = parsedJSON.meta;\n  if (meta) {\n    let tags = meta.tag;\n    if (tags) {\n      for (let t of tags) {\n        let version = util.versionFromTag(t);\n        if (version) {\n          // Move the version string from \"display\" to \"code\".  The index.js\n          // code will handle updating the version number.\n          if (t.display && !t.code) {\n            t.code = t.display;\n            delete t.display;\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  // In this version the extension in Questionnaire for answer repeats is removed, and replaced with repeats = true.\n  if (parsedJSON.resourceType === 'Questionnaire') {\n    util.findItemByExtension(parsedJSON, function (item) {\n      if (item.extension) {\n        for (let i=0; i< item.extension.length; i++) {\n          let ext = item.extension[i];\n          if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-answerRepeats\") {\n            item.repeats = true;\n            item.extension.splice(i, 1);\n            i = i - 1;\n          }\n        }\n      }\n    });\n  }\n\n  return parsedJSON;\n};\n","'use strict';\n\n/**\n *  The update function for updating forms or resources to the version in this filename.\n * @return the updated form or resource.\n */\nmodule.exports = function (parsedJSON) {\n  // In this version, the observationLinkPeriod extension changed.  This\n  // affects both LForms definitions and Questionnaires.\n\n  let util = require('../util');\n  if (!util.isFHIRResource(parsedJSON) || parsedJSON.resourceType === 'Questionnaire') {\n    util.findExtensions(parsedJSON, function (extArray) {\n      for (let ext of extArray) {\n        if (ext.url === \"http://hl7.org/fhir/StructureDefinition/questionnaire-observationLinkPeriod\")\n          ext.url = \"http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-observationLinkPeriod\";\n      }\n    });\n  }\n  return parsedJSON;\n};\n"],"sourceRoot":""}